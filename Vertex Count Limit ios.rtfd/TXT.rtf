{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa240

\f0\b\fs48 \cf0 Artwork
\f1\b0\fs24 \
\pard\pardeftab720\sa240

\fs30 \cf0 When it comes to performance on an iOS device, our artwork will have a much greater impact on performance than it would on a Desktop or Console platform. The bottom line is simple\'97what works on other platforms does not work on iOS devices.
\fs24 \
\pard\pardeftab720\sa240

\f0\b\fs42 \cf0 Vertex count
\f1\b0\fs24 \
\pard\pardeftab720\sa240

\fs30 \cf0 Unity for iOS is limited, depending on the device, to around 10,000 to 30,000 vertices per frame. This is quite different from the number of vertices in the scene. That is to say that this is the maximum number of vertices in the camera viewport that should be at one time within this range.
\fs24 \
\pard\pardeftab720\sa240

\fs26 \cf0 This is a performance limit, not a technical limit. In other words, we can have more vertices, but the frame rate may decrease so dramatically as to make the game unplayable.
\fs24 \
\pard\pardeftab720\sa240

\fs30 \cf0 Additionally, this assumes that simple shaders, such as the diffuse and vertex-lit shaders, are in use. If more complex shaders are used, then the game frame rate may still become unacceptably slow, even if the vertex count is within the acceptable range.
\fs24 \

\fs30 In other words, the vertex count is a guideline, not a guarantee.
\fs24 \
\pard\pardeftab720\sa240

\f0\b\fs42 \cf0 Skinned meshes
\f1\b0\fs24 \
\pard\pardeftab720\sa240

\fs30 \cf0 In the context of the vertex count, skinned meshes (such as those that animate characters) may report having upwards of 2,000 vertices each. This means that we will be quite limited with respect to how many characters can be seen at once. If we are using a third person view, such that our character is rendered at each frame, then we will be dramatically limiting what other objects can be displayed in the frame.
\fs24 \

\fs30 In an effort to address this, skinned meshes have special optimizations handled by Unity3D to reduce their performance impact. However, these optimizations are effective only if an animation consists of a single skinned mesh.
\fs24 \

\fs30 So, if we do decide to use more than one character, and we want to have the least impact on performance, then the characters should look very similar.
\fs24 \

\fs30 It's very important that skinned mesh has as few bones as possible. For very simple characters, it should be less than 10 bones. And for those requiring higher quality, it should not be more than 15.
\fs24 \
}